{"version":3,"sources":["Demo/Category/Brand/brandForm.js","Demo/Category/Brand/brand.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js"],"names":["BrandForm","onFinish","form","idEdit","TextArea","Input","Option","Select","dispatch","useDispatch","ecommercelist","useSelector","state","ecommerceReducer","useState","fileList","setFileList","console","log","useEffect","ecommercegetAll","imageUrl","getFieldValue","onPreview","file","a","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","window","open","document","write","outerHTML","className","validateMessages","required","types","string","number","max","range","pattern","mismatch","Item","name","hidden","label","rules","whitespace","type","style","width","paddingRight","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","map","x","index","key","value","id","valuePropName","getValueFromEvent","e","listType","beforeUpload","onChange","newFileList","icon","UploadOutlined","disabled","onClick","formData","FormData","forEach","append","Blob","axios","post","process","REACT_APP_API_URL","headers","then","response","data","message","setFieldsValue","success","error","catch","htmlType","Brand","brandReducer","brandlist","loadingbrand","brandgetAll","searchText","setsearchText","searchedColumn","setSearchedColumn","isModalAdd","setIsModalAdd","isModalEdit","setIsModalEdit","setIdEdit","Form","useForm","formAdd","formEdit","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","target","onPressEnter","handleSearch","marginBottom","display","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","img","height","alt","sorter","b","ecommerce","sortDirections","SyncOutlined","align","EditOutlined","handleEditForm","placement","onConfirm","handleDelete","okText","cancelText","DeleteOutlined","useCallback","editform","des","ecommerce_id","image_url","brandDelete","visible","footer","centered","onCancel","add","brandAdd","resetFields","edit","description","brandEdit","scroll","pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSizeOptions","loading","dataSource","rowKey","bordered","props","ref","React","AntdIcon","_objectSpread","UploadOutlinedSvg","displayName"],"mappings":"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","file":"static/js/20.0684d5ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button, Form, InputNumber, Switch, Upload, message,Select } from 'antd';\r\nimport { UploadOutlined, InboxOutlined, PlusOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { ecommercegetAll } from '../../../store/Category/ecommerce';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nconst BrandForm = ({ onFinish, form, idEdit }) => {\r\n    const { TextArea } = Input;\r\n    const {Option}=Select;\r\n    const dispatch=useDispatch();\r\n    const {ecommercelist}=useSelector(state=>state.ecommerceReducer)\r\n    const [showAgeTotal, setShowAgeTotal] = useState(false);\r\n    const [showAgeMore, setShowAgeMore] = useState(false);\r\n    const [fileList, setFileList] = useState([])\r\n   console.log(fileList);\r\n    useEffect(() => {\r\n        dispatch(ecommercegetAll())\r\n    }, [])\r\n    const validateMessages = {\r\n        required: 'Không được để trống !',\r\n        types: {\r\n            string: '${label} không hợp lệ !',\r\n            number: '${label} không hợp lệ !',\r\n\r\n        },\r\n        string: {\r\n            max: '${label} tối đa 255 ký tự !',\r\n        },\r\n        number: {\r\n            range: '${label} trong khoảng 1-100 !',\r\n        },\r\n        pattern: {\r\n            mismatch: '${label} không hợp lệ !',\r\n        },\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    // const [fileList, setFileList] = useState([]);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n \r\n    useEffect(() => {\r\n        if(idEdit) {\r\n            const imageUrl = form.getFieldValue('image');\r\n            setFileList(imageUrl)\r\n            console.log(imageUrl);\r\n        }\r\n    }, [form, idEdit])\r\n\r\n    const handleChange = info => {\r\n     \r\n        if (info.file.status === 'uploading') {\r\n            setLoading(true);\r\n          }\r\n    };\r\n    // const propsUpload = {\r\n    //     name: 'files',\r\n    //     maxCount: 5,\r\n    //     action: `${process.env.REACT_APP_API_URL}/upload/upload-array`,\r\n    \r\n    //     onSuccess: (result, file) => {\r\n    //         console.log('ok', result);\r\n    //         if(result.success) {\r\n    //             form.setFieldsValue({\r\n    //                 image: result.url,\r\n    //             })\r\n    //             setImageUrl(result.url);\r\n    //             message.success('Tải ảnh lên thành công !');\r\n    //         } else {\r\n    //             form.setFieldsValue({\r\n    //                 image: '',\r\n    //             })\r\n    //             setImageUrl('');\r\n    //             if(result.error.message === \"File too large\") {\r\n    //                 message.error('Dung lượng ảnh không quá 5mb !');\r\n    //             } if(result.error.message === \"Images Only!\") {\r\n    //                 message.error('Chỉ tải lên định dạng ảnh .jpg, .png, .jpeg !');\r\n    //             } else {\r\n    //                 message.error('Tải ảnh lên thất bại ! Hãy thử lại !');\r\n    //             }\r\n    //         }\r\n    //         setLoading(false);\r\n    //     },\r\n    //     onError: (err, response) => {\r\n    //         form.setFieldsValue({\r\n    //             image: '',\r\n    //         })\r\n    //         setImageUrl('');\r\n    //         message.error('Tải ảnh lên thất bại ! Hãy thử lại');\r\n    //         setLoading(false);\r\n    //     }\r\n    // };\r\n\r\n    const handleadd = ()=>{\r\n       \r\n        var formData = new FormData();\r\n\r\n   \r\n    fileList.forEach(file => {\r\n    \r\n      formData.append(\"files\", new Blob([file]) , file.name);\r\n    });\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/upload/upload-array`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n          console.log('cc',response)\r\n        \r\n      if( response.data.url!==\" \" &&  response.data.message==\"UPLOAD_SUCCESS\"){\r\n        form.setFieldsValue({\r\n            image: response.data.url,\r\n        })\r\n        message.success(\"upload thành công\")\r\n     }else{\r\n         message.error(\"Mời thêm dữ liệu\")\r\n     }\r\n         \r\n      }\r\n      )\r\n      .catch((error) => {\r\n        form.setFieldsValue({\r\n            image: \" \",\r\n        })\r\n        message.error(\"upload thất bại\",error)\r\n      });\r\n  };\r\n    const normContent = (value) => {\r\n        return value.text;\r\n    };\r\n    const normFile = (e) => {\r\n        return e && e.file;\r\n    };\r\n  \r\n\r\n      \r\n      \r\n    \r\n      const onChange = ({ fileList:newFileList }) => {\r\n        setFileList(newFileList);\r\n\r\n      };\r\n      const handleBeforeUpload = (file) => {\r\n        setFileList([...fileList, file]);\r\n        return false;\r\n      };\r\n    \r\n      const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n    return (\r\n        <div>\r\n            <Form className=\"ecommerce-form\" validateMessages={validateMessages} onFinish={onFinish} form={form}  >\r\n                {\r\n                    idEdit &&\r\n                    <Form.Item name=\"id\" hidden={true}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                }\r\n\r\n                <Form.Item name=\"name\" label=\"Tên\" required rules={[{ required: true, whitespace: true }, { type: 'string', max: 255 }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <Input placeholder=\"Ví dụ: Eplaza\" />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item name=\"des\" label=\"Description\" required rules={[{ required: true }, { type: 'string', max: 255 }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <TextArea></TextArea>\r\n                </Form.Item>\r\n                <Form.Item name=\"ecommerce_id\" label=\"EcommerceId\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\"  }}>\r\n                    <Select\r\n                       \r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"EcommerceId\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                        }>\r\n                      \r\n\r\n                        {ecommercelist.map((x,index)=>(\r\n                            <Option key={index} value={x.id} >{x.name}</Option>\r\n                        ))}\r\n                        \r\n                       \r\n                    </Select>\r\n                </Form.Item>\r\n      <Form.Item name=\"image_url\" label=\"Ảnh tin tức\" valuePropName=\"file\" getValueFromEvent={normFile}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }} >\r\n                        {/* <Upload\r\n                            {...propsUpload}\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {imageUrl ? <img src={`${process.env.REACT_APP_API_URL}/${imageUrl}`} alt=\"avatar\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} /> \r\n                                    : <div>\r\n                                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                                    </div>}\r\n                        </Upload> */}\r\n \r\n      <Upload\r\n        // action={`${process.env.REACT_APP_API_URL}/upload/upload-array`}\r\n        listType=\"picture-card\"\r\n        name='files'\r\n        beforeUpload={handleBeforeUpload}\r\n        fileList={fileList}\r\n        onChange={onChange}\r\n        onPreview={onPreview}\r\n        \r\n      >\r\n          + Upload\r\n      </Upload>\r\n  \r\n        <br/>\r\n        <Button icon={<UploadOutlined />} disabled={fileList==0} onClick={handleadd}>Upload</Button>\r\n                    </Form.Item>\r\n               \r\n                \r\n                <Form.Item name=\"image\" hidden={true}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{ width: '90%' }}>\r\n\r\n                </Form.Item>\r\n                <Form.Item className='button'>\r\n                    <Button htmlType=\"submit\" type=\"primary\">Lưu lại</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrandForm\r\n","import React, { useCallback } from 'react'\r\nimport { brandAdd, brandgetAll, brandEdit, brandDelete } from '../../../store/Category/brand';\r\n\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Space, Table, Popconfirm, Tag, Input } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nimport { SearchOutlined, SyncOutlined, EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './brand.scss'\r\nimport BrandForm from './brandForm';\r\n\r\nconst Brand = () => {\r\n  const { brandlist, loadingbrand } = useSelector(state => state.brandReducer)\r\nconsole.log(brandlist)\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(brandgetAll())\r\n  }, [dispatch])\r\n  \r\n  const [searchText, setsearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  //modal\r\n  const [isModalAdd, setIsModalAdd] = useState(false);\r\n  const [isModalEdit, setIsModalEdit] = useState(false);\r\n  const [idEdit,setIdEdit]=useState(0)\r\n  const [formAdd] = Form.useForm();    //form\r\n  const [formEdit] = Form.useForm();\r\n  const checkImage=(img)=>{\r\n    if(img===null){\r\n      return\r\n    }else{\r\n      return process.env.REACT_APP_API_URL + img[0].url\r\n    }\r\n  }\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 12 }}>\r\n        <Input\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n\r\n\r\n        render: text =>{\r\n          if( searchedColumn === dataIndex ){\r\n            return     <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[searchText]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n          }else{\r\n            if(dataIndex==='ecommerce'){\r\n              return text?.name\r\n            }\r\n         \r\n         \r\n            return text;\r\n          }\r\n        }\r\n  });\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n\r\n    confirm();\r\n    setsearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n\r\n  };\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setsearchText('')\r\n  };\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'Name',\r\n      width: '20%',\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n    {\r\n      title: 'Image',\r\n  \r\n      dataIndex: 'image_url',\r\n      key: 'image_url',\r\n      width:'5%',\r\n      render: text =>  <img src={checkImage(text) }  style={{width:\"100%\",height:\"100%\"}} alt=\"\"/>\r\n        \r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'des',\r\n      key: 'des',\r\n      width: '20%',\r\n      ...getColumnSearchProps('des'),\r\n    },\r\n    {\r\n      title: 'EcommerceId',\r\n      dataIndex: 'ecommerce',\r\n      key: 'ecommerce',\r\n      width: '20%',\r\n      sorter: (a, b) => a.ecommerce - b.ecommerce,\r\n        sortDirections: ['descend', 'ascend'],\r\n      ...getColumnSearchProps('ecommerce'),\r\n    },\r\n    {\r\n      key: 'Action',\r\n      title: <SyncOutlined onClick={() => dispatch(brandgetAll())} />,\r\n      align: 'center',\r\n      width: '10%',\r\n      render: (text, record, index) => (\r\n        <Space size=\"middle\">\r\n          <EditOutlined style={{ color: \"blue\" }} onClick={() => handleEditForm(record)} />\r\n          <Popconfirm\r\n            placement=\"bottomRight\"\r\n            title={`Bạn muốn xóa ${record.name} ?`}\r\n            onConfirm={() => handleDelete(record.id)}\r\n            okText=\"Xóa\"\r\n            cancelText=\"Hủy\"\r\n          >\r\n            <DeleteOutlined style={{ color: \"red\" }} />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n\r\n    },\r\n  ];\r\n  // actionform\r\n  const onFinishAdd = (data) => {\r\nconst add={\r\n  name:data.name,\r\n  des:data.des,\r\n  ecommerce_id: data.ecommerce_id,\r\n  image_url:data.image\r\n}\r\n    dispatch(brandAdd(add))\r\n    \r\n    setIsModalAdd(false)\r\n    formAdd.resetFields()\r\n    console.log(add)\r\n\r\n  //   const newdata = {\r\n  //     Name: data.name,\r\n  //     Email: data.email,\r\n  //     Phone: data.phone,\r\n  //     Address: data.address,\r\n  //     Description: data.description,\r\n  //     // ImageUrl:data.files[0]\r\n\r\n  //   }\r\n  //   console.log(data)\r\n  //   dispatch(ecommerceAdd(newdata))\r\n   \r\n  //   setIsModalAdd(false)\r\n  //   formAdd.resetFields()\r\n   }\r\n\r\n  const handleEditForm = useCallback((record) => {\r\n    const editform = {\r\n      id: record.id,\r\n      name: record.name,\r\n      des: record.des,\r\n      ecommerce_id: record.ecommerce.id,\r\n      image:record.image_url   \r\n    }\r\n    formEdit.setFieldsValue(editform)\r\n    setIdEdit(record.id);\r\n    setIsModalEdit(true)\r\n\r\n  }, [formEdit])\r\n  const onFinishEdit = (data) => {\r\n    const edit={\r\n      id:data.id,\r\n      name:data.name,\r\n      description:data.des,\r\n      ecommerce_id: data.ecommerce_id,\r\n      image_url:data.image\r\n    }\r\n    dispatch(brandEdit(edit))\r\n    setIsModalEdit(false)\r\n    formAdd.resetFields()\r\n    console.log(edit)\r\n  }\r\n  const handleDelete = (id) => {\r\n    dispatch(brandDelete(id))\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='addecommerce' >\r\n        <Button type=\"primary\" onClick={() => setIsModalAdd(true)}>\r\n          Thêm Brand\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Modal className='modal-add' title=\"Thêm Brand\" visible={isModalAdd} footer=\"\" centered onCancel={() => setIsModalAdd(false)}>\r\n        <BrandForm\r\n          onFinish={onFinishAdd}\r\n          form={formAdd} />\r\n      </Modal>\r\n\r\n      <Modal className='modal-edit' title=\"Sửa Brand\" visible={isModalEdit} onCancel={() => setIsModalEdit(false)} centered footer=\"\">\r\n        <BrandForm\r\n          onFinish={onFinishEdit}\r\n          form={formEdit}\r\n          idEdit={idEdit}\r\n        />\r\n      </Modal>\r\n\r\n      <Table scroll={{ x: 900 }} \r\n       pagination= {{defaultCurrent:30,defaultPageSize:10,hideOnSinglePage:true,pageSizeOptions:[10,30,50,100]}}\r\n      loading={loadingbrand} columns={columns} dataSource={brandlist} rowKey={record => record.id} bordered />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Brand;\r\n","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);"],"sourceRoot":""}