{"version":3,"file":"static/js/559.17f97a40.chunk.js","mappings":"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","sources":["Demo/Category/Brand/brandForm.js","Demo/Category/Brand/brand.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js"],"sourcesContent":["import React from 'react'\r\nimport { Input, Button, Form, InputNumber, Switch, Upload, message,Select } from 'antd';\r\nimport { UploadOutlined, InboxOutlined, PlusOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { ecommercegetAll } from '../../../store/Category/ecommerce';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nconst BrandForm = ({ onFinish, form, idEdit }) => {\r\n    const { TextArea } = Input;\r\n    const {Option}=Select;\r\n    const dispatch=useDispatch();\r\n    const {ecommercelist}=useSelector(state=>state.ecommerceReducer)\r\n    const [showAgeTotal, setShowAgeTotal] = useState(false);\r\n    const [showAgeMore, setShowAgeMore] = useState(false);\r\n    const [fileList, setFileList] = useState([])\r\n   console.log(fileList);\r\n    useEffect(() => {\r\n        dispatch(ecommercegetAll())\r\n    }, [])\r\n    const validateMessages = {\r\n        required: 'Không được để trống !',\r\n        types: {\r\n            string: '${label} không hợp lệ !',\r\n            number: '${label} không hợp lệ !',\r\n\r\n        },\r\n        string: {\r\n            max: '${label} tối đa 255 ký tự !',\r\n        },\r\n        number: {\r\n            range: '${label} trong khoảng 1-100 !',\r\n        },\r\n        pattern: {\r\n            mismatch: '${label} không hợp lệ !',\r\n        },\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    // const [fileList, setFileList] = useState([]);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n \r\n    useEffect(() => {\r\n        if(idEdit) {\r\n            const imageUrl = form.getFieldValue('image');\r\n            setFileList(imageUrl)\r\n            console.log(imageUrl);\r\n        }\r\n    }, [form, idEdit])\r\n\r\n    const handleChange = info => {\r\n     \r\n        if (info.file.status === 'uploading') {\r\n            setLoading(true);\r\n          }\r\n    };\r\n    // const propsUpload = {\r\n    //     name: 'files',\r\n    //     maxCount: 5,\r\n    //     action: `${process.env.REACT_APP_API_URL}/upload/upload-array`,\r\n    \r\n    //     onSuccess: (result, file) => {\r\n    //         console.log('ok', result);\r\n    //         if(result.success) {\r\n    //             form.setFieldsValue({\r\n    //                 image: result.url,\r\n    //             })\r\n    //             setImageUrl(result.url);\r\n    //             message.success('Tải ảnh lên thành công !');\r\n    //         } else {\r\n    //             form.setFieldsValue({\r\n    //                 image: '',\r\n    //             })\r\n    //             setImageUrl('');\r\n    //             if(result.error.message === \"File too large\") {\r\n    //                 message.error('Dung lượng ảnh không quá 5mb !');\r\n    //             } if(result.error.message === \"Images Only!\") {\r\n    //                 message.error('Chỉ tải lên định dạng ảnh .jpg, .png, .jpeg !');\r\n    //             } else {\r\n    //                 message.error('Tải ảnh lên thất bại ! Hãy thử lại !');\r\n    //             }\r\n    //         }\r\n    //         setLoading(false);\r\n    //     },\r\n    //     onError: (err, response) => {\r\n    //         form.setFieldsValue({\r\n    //             image: '',\r\n    //         })\r\n    //         setImageUrl('');\r\n    //         message.error('Tải ảnh lên thất bại ! Hãy thử lại');\r\n    //         setLoading(false);\r\n    //     }\r\n    // };\r\n\r\n    const handleadd = ()=>{\r\n       \r\n        var formData = new FormData();\r\n\r\n   \r\n    fileList.forEach(file => {\r\n    \r\n      formData.append(\"files\", new Blob([file]) , file.name);\r\n    });\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/upload/upload-array`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n          console.log('cc',response)\r\n        \r\n      if( response.data.url!==\" \" &&  response.data.message==\"UPLOAD_SUCCESS\"){\r\n        form.setFieldsValue({\r\n            image: response.data.url,\r\n        })\r\n        message.success(\"upload thành công\")\r\n     }else{\r\n         message.error(\"Mời thêm dữ liệu\")\r\n     }\r\n         \r\n      }\r\n      )\r\n      .catch((error) => {\r\n        form.setFieldsValue({\r\n            image: \" \",\r\n        })\r\n        message.error(\"upload thất bại\",error)\r\n      });\r\n  };\r\n    const normContent = (value) => {\r\n        return value.text;\r\n    };\r\n    const normFile = (e) => {\r\n        return e && e.file;\r\n    };\r\n  \r\n\r\n      \r\n      \r\n    \r\n      const onChange = ({ fileList:newFileList }) => {\r\n        setFileList(newFileList);\r\n\r\n      };\r\n      const handleBeforeUpload = (file) => {\r\n        setFileList([...fileList, file]);\r\n        return false;\r\n      };\r\n    \r\n      const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n    return (\r\n        <div>\r\n            <Form className=\"ecommerce-form\" validateMessages={validateMessages} onFinish={onFinish} form={form}  >\r\n                {\r\n                    idEdit &&\r\n                    <Form.Item name=\"id\" hidden={true}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                }\r\n\r\n                <Form.Item name=\"name\" label=\"Tên\" required rules={[{ required: true, whitespace: true }, { type: 'string', max: 255 }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <Input placeholder=\"Ví dụ: Eplaza\" />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item name=\"des\" label=\"Description\" required rules={[{ required: true }, { type: 'string', max: 255 }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <TextArea></TextArea>\r\n                </Form.Item>\r\n                <Form.Item name=\"ecommerce_id\" label=\"EcommerceId\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\"  }}>\r\n                    <Select\r\n                       \r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"EcommerceId\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                        }>\r\n                      \r\n\r\n                        {ecommercelist.map((x,index)=>(\r\n                            <Option key={index} value={x.id} >{x.name}</Option>\r\n                        ))}\r\n                        \r\n                       \r\n                    </Select>\r\n                </Form.Item>\r\n      <Form.Item name=\"image_url\" label=\"Ảnh tin tức\" valuePropName=\"file\" getValueFromEvent={normFile}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }} >\r\n                        {/* <Upload\r\n                            {...propsUpload}\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {imageUrl ? <img src={`${process.env.REACT_APP_API_URL}/${imageUrl}`} alt=\"avatar\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} /> \r\n                                    : <div>\r\n                                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                                    </div>}\r\n                        </Upload> */}\r\n \r\n      <Upload\r\n        // action={`${process.env.REACT_APP_API_URL}/upload/upload-array`}\r\n        listType=\"picture-card\"\r\n        name='files'\r\n        beforeUpload={handleBeforeUpload}\r\n        fileList={fileList}\r\n        onChange={onChange}\r\n        onPreview={onPreview}\r\n        \r\n      >\r\n          + Upload\r\n      </Upload>\r\n  \r\n        <br/>\r\n        <Button icon={<UploadOutlined />} disabled={fileList==0} onClick={handleadd}>Upload</Button>\r\n                    </Form.Item>\r\n               \r\n                \r\n                <Form.Item name=\"image\" hidden={true}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{ width: '90%' }}>\r\n\r\n                </Form.Item>\r\n                <Form.Item className='button'>\r\n                    <Button htmlType=\"submit\" type=\"primary\">Lưu lại</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrandForm\r\n","import React, { useCallback } from 'react'\r\nimport { brandAdd, brandgetAll, brandEdit, brandDelete } from '../../../store/Category/brand';\r\n\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Space, Table, Popconfirm, Tag, Input } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nimport { SearchOutlined, SyncOutlined, EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './brand.scss'\r\nimport BrandForm from './brandForm';\r\n\r\nconst Brand = () => {\r\n  const { brandlist, loadingbrand } = useSelector(state => state.brandReducer)\r\nconsole.log(brandlist)\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(brandgetAll())\r\n  }, [dispatch])\r\n  \r\n  const [searchText, setsearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  //modal\r\n  const [isModalAdd, setIsModalAdd] = useState(false);\r\n  const [isModalEdit, setIsModalEdit] = useState(false);\r\n  const [idEdit,setIdEdit]=useState(0)\r\n  const [formAdd] = Form.useForm();    //form\r\n  const [formEdit] = Form.useForm();\r\n  const checkImage=(img)=>{\r\n    if(img===null){\r\n      return\r\n    }else{\r\n      return process.env.REACT_APP_API_URL + img[0].url\r\n    }\r\n  }\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 12 }}>\r\n        <Input\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n\r\n\r\n        render: text =>{\r\n          if( searchedColumn === dataIndex ){\r\n            return     <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[searchText]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n          }else{\r\n            if(dataIndex==='ecommerce'){\r\n              return text?.name\r\n            }\r\n         \r\n         \r\n            return text;\r\n          }\r\n        }\r\n  });\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n\r\n    confirm();\r\n    setsearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n\r\n  };\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setsearchText('')\r\n  };\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'Name',\r\n      width: '20%',\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n    {\r\n      title: 'Image',\r\n  \r\n      dataIndex: 'image_url',\r\n      key: 'image_url',\r\n      width:'5%',\r\n      render: text =>  <img src={checkImage(text) }  style={{width:\"100%\",height:\"100%\"}} alt=\"\"/>\r\n        \r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'des',\r\n      key: 'des',\r\n      width: '20%',\r\n      ...getColumnSearchProps('des'),\r\n    },\r\n    {\r\n      title: 'EcommerceId',\r\n      dataIndex: 'ecommerce',\r\n      key: 'ecommerce',\r\n      width: '20%',\r\n      sorter: (a, b) => a.ecommerce - b.ecommerce,\r\n        sortDirections: ['descend', 'ascend'],\r\n      ...getColumnSearchProps('ecommerce'),\r\n    },\r\n    {\r\n      key: 'Action',\r\n      title: <SyncOutlined onClick={() => dispatch(brandgetAll())} />,\r\n      align: 'center',\r\n      width: '10%',\r\n      render: (text, record, index) => (\r\n        <Space size=\"middle\">\r\n          <EditOutlined style={{ color: \"blue\" }} onClick={() => handleEditForm(record)} />\r\n          <Popconfirm\r\n            placement=\"bottomRight\"\r\n            title={`Bạn muốn xóa ${record.name} ?`}\r\n            onConfirm={() => handleDelete(record.id)}\r\n            okText=\"Xóa\"\r\n            cancelText=\"Hủy\"\r\n          >\r\n            <DeleteOutlined style={{ color: \"red\" }} />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n\r\n    },\r\n  ];\r\n  // actionform\r\n  const onFinishAdd = (data) => {\r\nconst add={\r\n  name:data.name,\r\n  des:data.des,\r\n  ecommerce_id: data.ecommerce_id,\r\n  image_url:data.image\r\n}\r\n    dispatch(brandAdd(add))\r\n    \r\n    setIsModalAdd(false)\r\n    formAdd.resetFields()\r\n    console.log(add)\r\n\r\n  //   const newdata = {\r\n  //     Name: data.name,\r\n  //     Email: data.email,\r\n  //     Phone: data.phone,\r\n  //     Address: data.address,\r\n  //     Description: data.description,\r\n  //     // ImageUrl:data.files[0]\r\n\r\n  //   }\r\n  //   console.log(data)\r\n  //   dispatch(ecommerceAdd(newdata))\r\n   \r\n  //   setIsModalAdd(false)\r\n  //   formAdd.resetFields()\r\n   }\r\n\r\n  const handleEditForm = useCallback((record) => {\r\n    const editform = {\r\n      id: record.id,\r\n      name: record.name,\r\n      des: record.des,\r\n      ecommerce_id: record.ecommerce.id,\r\n      image:record.image_url   \r\n    }\r\n    formEdit.setFieldsValue(editform)\r\n    setIdEdit(record.id);\r\n    setIsModalEdit(true)\r\n\r\n  }, [formEdit])\r\n  const onFinishEdit = (data) => {\r\n    const edit={\r\n      id:data.id,\r\n      name:data.name,\r\n      description:data.des,\r\n      ecommerce_id: data.ecommerce_id,\r\n      image_url:data.image\r\n    }\r\n    dispatch(brandEdit(edit))\r\n    setIsModalEdit(false)\r\n    formAdd.resetFields()\r\n    console.log(edit)\r\n  }\r\n  const handleDelete = (id) => {\r\n    dispatch(brandDelete(id))\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='addecommerce' >\r\n        <Button type=\"primary\" onClick={() => setIsModalAdd(true)}>\r\n          Thêm Brand\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Modal className='modal-add' title=\"Thêm Brand\" visible={isModalAdd} footer=\"\" centered onCancel={() => setIsModalAdd(false)}>\r\n        <BrandForm\r\n          onFinish={onFinishAdd}\r\n          form={formAdd} />\r\n      </Modal>\r\n\r\n      <Modal className='modal-edit' title=\"Sửa Brand\" visible={isModalEdit} onCancel={() => setIsModalEdit(false)} centered footer=\"\">\r\n        <BrandForm\r\n          onFinish={onFinishEdit}\r\n          form={formEdit}\r\n          idEdit={idEdit}\r\n        />\r\n      </Modal>\r\n\r\n      <Table scroll={{ x: 900 }} \r\n       pagination= {{defaultCurrent:30,defaultPageSize:10,hideOnSinglePage:true,pageSizeOptions:[10,30,50,100]}}\r\n      loading={loadingbrand} columns={columns} dataSource={brandlist} rowKey={record => record.id} bordered />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Brand;\r\n","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);"],"names":["onFinish","form","idEdit","TextArea","Input","Option","Select","dispatch","useDispatch","ecommercelist","useSelector","state","ecommerceReducer","useState","fileList","setFileList","console","log","useEffect","ecommercegetAll","imageUrl","getFieldValue","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","window","open","document","write","outerHTML","className","validateMessages","required","types","string","number","max","range","pattern","mismatch","name","hidden","label","rules","whitespace","type","style","width","paddingRight","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","map","x","index","value","id","valuePropName","getValueFromEvent","e","listType","beforeUpload","onChange","newFileList","icon","UploadOutlined","disabled","onClick","formData","FormData","forEach","append","Blob","axios","process","headers","then","response","data","message","setFieldsValue","catch","error","htmlType","brandReducer","brandlist","loadingbrand","brandgetAll","searchText","setsearchText","searchedColumn","setSearchedColumn","isModalAdd","setIsModalAdd","isModalEdit","setIsModalEdit","setIdEdit","Form","formAdd","formEdit","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","target","onPressEnter","handleSearch","marginBottom","display","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","key","img","height","alt","sorter","a","b","ecommerce","sortDirections","SyncOutlined","align","EditOutlined","handleEditForm","placement","onConfirm","handleDelete","okText","cancelText","DeleteOutlined","useCallback","editform","des","ecommerce_id","image_url","brandDelete","visible","footer","centered","onCancel","add","brandAdd","resetFields","edit","description","brandEdit","scroll","pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSizeOptions","loading","dataSource","rowKey","bordered","props","ref","React","AntdIcon","_objectSpread","UploadOutlinedSvg","displayName"],"sourceRoot":""}