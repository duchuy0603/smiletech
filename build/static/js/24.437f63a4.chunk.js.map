{"version":3,"sources":["Demo/Category/Notifications/notificationsForm.js","Demo/Category/Notifications/notifications.js"],"names":["NotificationsForm","onFinish","form","idEdit","Option","Select","dispatch","useDispatch","ecommercelist","useSelector","state","ecommerceReducer","storelist","storeReducer","productlist","productReducer","Input","TextArea","useState","setImageUrl","useEffect","imageUrl","getFieldValue","console","log","ecommercegetAll","productgetAll","storegetAll","process","REACT_APP_API_URL","className","validateMessages","required","types","string","number","max","range","pattern","mismatch","Item","name","hidden","label","rules","whitespace","type","style","width","paddingRight","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","map","x","key","value","id","htmlType","Notifications","notificationsReducer","notificationslist","loadingnotifications","notificationsgetAll","searchText","setsearchText","searchedColumn","setSearchedColumn","setIdEdit","isModalAdd","setIsModalAdd","isModalEdit","setIsModalEdit","Form","useForm","formAdd","formEdit","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","sorter","a","b","content","sortDirections","ecommerce","length","store","product","SyncOutlined","align","index","EditOutlined","handleEditForm","placement","onConfirm","handleDelete","okText","cancelText","DeleteOutlined","editform","ecommerce_id","setFieldsValue","notificationsDelete","visible","footer","centered","onCancel","data","dataNews","notificationsAdd","resetFields","edit","notificationsEdit","scroll","pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSizeOptions","loading","dataSource","rowKey","bordered"],"mappings":"kWA2NeA,EAhNW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACjCC,EAAWC,IAAXD,OACFE,EAAWC,wBACbC,EAAeC,uBAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCH,cACAI,EAAWH,uBAAY,SAAAC,GAAK,OAAEA,EAAMG,gBAApCD,UACAE,EAAaL,uBAAY,SAAAC,GAAK,OAAEA,EAAMK,kBAAtCD,YAqBJ,GAnBqBE,IAAbC,SAmBsBC,oBAAS,IAAvC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAiBC,GAAjB,WAGAC,qBAAU,WACN,GAAGjB,EAAQ,CACP,IAAMkB,EAAWnB,EAAKoB,cAAc,SACpCH,EAAYE,GACZE,QAAQC,IAAIH,GAEhBf,EAASmB,eACTnB,EAASoB,eACTpB,EAASqB,iBACV,CAACzB,EAAKC,IAWE,GAAD,OAAKyB,qLAAYC,kBAAjB,yBA2CV,OACI,6BAGK,kBAAC,IAAD,CAAMC,UAAU,iBAEb7B,SAAUA,EAEV8B,iBA9Fa,CACrBC,SAAU,yDACVC,MAAO,CACHC,OAAQ,uCACRC,OAAQ,wCAGZD,OAAQ,CACJE,IAAK,iDAETD,OAAQ,CACJE,MAAO,sCAEXC,QAAS,CACLC,SAAU,yCAiFNrC,KAAMA,GAEFC,GACA,kBAAC,IAAKqC,KAAN,CAAWC,KAAK,KAAKC,QAAQ,GACzB,kBAAC,IAAD,OAGR,kBAAC,IAAKF,KAAN,CAAWC,KAAK,OAAOE,MAAM,SAAMX,UAAQ,EAACY,MAAO,CAAC,CAAEZ,UAAU,EAAMa,YAAY,GAAQ,CAAEC,KAAM,SAAUV,IAAK,MAC7GW,MAAO,CAAEC,MAAO,MAAOC,aAAc,SACrC,kBAAC,IAAD,CAAOC,YAAY,2BAGvB,kBAAC,IAAKV,KAAN,CAAWC,KAAK,UAAUE,MAAM,UAAUX,UAAQ,EAACY,MAAO,CAAC,CAAEZ,UAAU,IACnEe,MAAO,CAAEC,MAAO,MAAOC,aAAc,SACrC,kBAAC,IAAD,CAAOF,MAAO,CAAEC,MAAO,QAAUE,YAAY,+BAKjD,kBAAC,IAAKV,KAAN,CAAWC,KAAK,eAAeE,MAAM,cAAcX,UAAQ,EAACY,MAAO,CAAC,CAAEZ,UAAU,IAC5Ee,MAAO,CAAEC,MAAO,MAAOC,aAAc,SACrC,kBAAC,IAAD,CAEIE,YAAU,EACVJ,MAAO,CAAEC,MAAO,QAChBE,YAAY,cACZE,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GAElEE,WAAY,SAACC,EAASC,GAAV,OACRD,EAAQJ,SAASC,cAAcK,cAAcD,EAAQL,SAASC,iBAIjEjD,EAAcuD,KAAI,SAACC,GAAD,OACf,kBAAC5D,EAAD,CAAQ6D,IAAKD,EAAGE,MAAOF,EAAEG,IAAMH,EAAEvB,WAM7C,kBAAC,IAAKD,KAAN,CAAWC,KAAK,QAAQE,MAAM,QAAQX,UAAQ,EAACY,MAAO,CAAC,CAAEZ,UAAU,IAC/De,MAAO,CAAEC,MAAO,MAAOC,aAAc,SACrC,kBAAC,IAAD,CAEIE,YAAU,EACVJ,MAAO,CAAEC,MAAO,QAChBE,YAAY,QACZE,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GAElEE,WAAY,SAACC,EAASC,GAAV,OACRD,EAAQJ,SAASC,cAAcK,cAAcD,EAAQL,SAASC,iBAIjE7C,EAAUmD,KAAI,SAACC,GAAD,OACX,kBAAC5D,EAAD,CAAQ6D,IAAKD,EAAGE,MAAOF,EAAEG,IAAMH,EAAEvB,WAM7C,kBAAC,IAAKD,KAAN,CAAWC,KAAK,UAAUE,MAAM,UAAUX,UAAQ,EAACY,MAAO,CAAC,CAAEZ,UAAU,IACnEe,MAAO,CAAEC,MAAO,MAAOC,aAAc,SACrC,kBAAC,IAAD,CAEIE,YAAU,EACVJ,MAAO,CAAEC,MAAO,QAChBE,YAAY,UACZE,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GAElEE,WAAY,SAACC,EAASC,GAAV,OACRD,EAAQJ,SAASC,cAAcK,cAAcD,EAAQL,SAASC,iBAIjE3C,EAAYiD,KAAI,SAACC,GAAD,OACb,kBAAC5D,EAAD,CAAQ6D,IAAKD,EAAGE,MAAOF,EAAEG,IAAMH,EAAEvB,WAOzC,kBAAC,IAAKD,KAAN,CAAYO,MAAO,CAACC,MAAM,SAG1B,kBAAC,IAAKR,KAAN,CAAWC,KAAK,QAAQC,QAAQ,GAC5B,kBAAC,IAAD,OAGR,kBAAC,IAAKF,KAAN,CAAWV,UAAU,UACjB,kBAAC,IAAD,CAAQsC,SAAS,SACbtB,KAAK,WADT,yBC6CLuB,UApPO,WAGpB,MAAoD5D,uBAAY,SAAAC,GAAK,OAAIA,EAAM4D,wBAAvEC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,qBAGrBlE,EAAWC,wBAEjBa,qBAAU,WACRd,EAASmE,iBACR,CAACnE,IAEJ,MAAoCY,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KACA,EAA4CzD,mBAAS,IAArD,mBAAO0D,EAAP,KAAuBC,EAAvB,KACA,EAAyB3D,mBAAS,GAAlC,mBAAOf,EAAP,KAAc2E,EAAd,KAEA,EAAoC5D,oBAAS,GAA7C,mBAAO6D,EAAP,KAAmBC,EAAnB,KACA,EAAsC9D,oBAAS,GAA/C,mBAAO+D,EAAP,KAAoBC,EAApB,KACA,EAAkBC,IAAKC,UAAhBC,EAAP,oBACA,EAAmBF,IAAKC,UAAjBE,EAAP,oBACMC,EAAuB,SAAAC,GAAS,MAAK,CACzCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACd,yBAAK9C,MAAO,CAAE+C,QAAS,KACrB,kBAAC,IAAD,CACE5C,YAAW,iBAAYsC,GACvBtB,MAAOyB,EAAa,GACpBI,SAAU,SAAAC,GAAC,OAAIN,EAAgBM,EAAEC,OAAO/B,MAAQ,CAAC8B,EAAEC,OAAO/B,OAAS,KACnEgC,aAAc,kBAAMC,EAAaR,EAAcC,EAASJ,IACxDzC,MAAO,CAAEqD,aAAc,EAAGC,QAAS,WAErC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvD,KAAK,UACLwD,QAAS,kBAAMH,EAAaR,EAAcC,EAASJ,IACnDe,KAAM,kBAACC,EAAA,EAAD,MACNC,KAAK,QACL1D,MAAO,CAAEC,MAAO,KALlB,UASA,kBAAC,IAAD,CAAQsD,QAAS,kBAAMI,EAAYb,IAAeY,KAAK,QAAQ1D,MAAO,CAAEC,MAAO,KAA/E,YAMN2D,WAAY,SAAAC,GAAQ,OAAI,kBAACJ,EAAA,EAAD,CAAgBzD,MAAO,CAAE8D,MAAOD,EAAW,eAAYE,MAC/EC,SAAU,SAAC7C,EAAO8C,GAAR,OACRA,EAAOxB,GACHwB,EAAOxB,GAAWyB,WAAWxD,cAAcyD,SAAShD,EAAMT,eAC1D,IAGN0D,OAAQ,SAAAC,GACN,OAAIxC,IAAmBY,EACV,kBAAC,IAAD,CACX6B,eAAgB,CAAEC,gBAAiB,UAAWxB,QAAS,GACvDyB,YAAa,CAAC7C,GACd8C,YAAU,EACVC,gBAAiBL,EAAOA,EAAKH,WAAa,KAG3B,cAAZzB,GAGY,UAAZA,GAGY,YAAZA,EALD,OAAO4B,QAAP,IAAOA,OAAP,EAAOA,EAAM3E,KAQR2E,KAOPjB,EAAe,SAACR,EAAcC,EAASJ,GAE3CI,IACAjB,EAAcgB,EAAa,IAC3Bd,EAAkBW,IAGdkB,EAAc,SAAAb,GAClBA,IACAlB,EAAc,KAGV+C,EAAU,CAAC,aAEbC,MAAO,OACPnC,UAAW,OACXvB,IAAK,OACLjB,MAAO,OACJuC,EAAqB,SANZ,aAWZoC,MAAO,UACPnC,UAAW,UACXvB,IAAK,UACLjB,MAAO,MACP4E,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,QAAUD,EAAEC,SAChCC,eAAgB,CAAC,UAAW,WACzBzC,EAAqB,YAjBZ,yBAqBZoC,MAAO,aACPnC,UAAW,YACXvB,IAAK,YACLjB,MAAO,OACJuC,EAAqB,cAzBZ,IA0BZqC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,UAAUC,OAASJ,EAAEG,UAAUC,QACnDF,eAAgB,CAAC,UAAW,YA3BhB,yBA8BZL,MAAO,UACPnC,UAAW,QACXvB,IAAK,QACLjB,MAAO,OACJuC,EAAqB,UAlCZ,IAmCZqC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEM,MAAMD,OAASJ,EAAEK,MAAMD,QAC3CF,eAAgB,CAAC,UAAW,YApChB,yBAuCZL,MAAO,YACPnC,UAAW,UACXvB,IAAK,UACLjB,MAAO,OACJuC,EAAqB,YA3CZ,IA4CZqC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEO,QAAQF,OAASJ,EAAEM,QAAQF,QAC/CF,eAAgB,CAAC,UAAW,YAG9B,CACE/D,IAAK,SACL0D,MAAO,kBAACU,EAAA,EAAD,CAAc/B,QAAS,kBAAMhG,EAASmE,kBAC7C6D,MAAO,SACPtF,MAAO,MACPmE,OAAQ,SAACC,EAAMJ,EAAQuB,GAAf,OACN,kBAAC,IAAD,CAAO9B,KAAK,UACV,kBAAC+B,EAAA,EAAD,CAAczF,MAAO,CAAE8D,MAAO,QAAUP,QAAS,kBAAMmC,EAAezB,MACtE,kBAAC,IAAD,CACE0B,UAAU,cACVf,MAAK,oCAAkBX,EAAOvE,KAAzB,MACLkG,UAAW,kBAAMC,EAAa5B,EAAO7C,KACrC0E,OAAO,SAEPC,WAAW,YAEX,kBAACC,EAAA,EAAD,CAAgBhG,MAAO,CAAE8D,MAAO,cAwBnC4B,EAAiB,SAACzB,GACvB,IAAMgC,EAAW,CACf7E,GAAI6C,EAAO7C,GAEX1B,KAAMuE,EAAOvE,KACbsF,QAASf,EAAOe,QAChBkB,aAAcjC,EAAOiB,UAAU9D,GAC/BgE,MAAOnB,EAAOmB,MAAMhE,GACpBiE,QAASpB,EAAOoB,QAAQjE,IAI1BW,EAAUkC,EAAO7C,IACjBmB,EAAS4D,eAAeF,GACxB9D,GAAe,IAiBX0D,EAAe,SAACzE,GACpB7D,EAAS6I,YAAoBhF,KAE/B,OACE,6BACE,yBAAKrC,UAAU,gBACb,kBAAC,IAAD,CAAQgB,KAAK,UAAUwD,QAAS,kBAE9BtB,GAAc,KAFhB,0BAMF,6BACA,kBAAC,IAAD,CAAOlD,UAAU,YAAY6F,MAAM,wBAAqByB,QAASrE,EAAYsE,OAAO,GAAGC,UAAQ,EAACC,SAAU,kBAAMvE,GAAc,KAC5H,kBAAC,EAAD,CACE/E,SA9DY,SAACuJ,GACpB,IAAMC,EAAW,CAChBhH,KAAM+G,EAAK/G,KACXsF,QAASyB,EAAKzB,QAEdK,QAASoB,EAAKpB,QACdD,MAAOqB,EAAKrB,MACZc,aAAcO,EAAKP,cAGnB3I,EAASoJ,YAAiBD,IAC1BpE,EAAQsE,cACR3E,GAAc,IAmDR9E,KAAMmF,KAGV,kBAAC,IAAD,CAAOvD,UAAU,aAAa6F,MAAM,yBAAoByB,QAASnE,EAAasE,SAAU,kBAAMrE,GAAe,IAAQoE,UAAQ,EAACD,OAAO,IACnI,kBAAC,EAAD,CACEpJ,SAnCa,SAAC+G,GACpB,IAAM4C,EAAO,CACXzF,GAAG6C,EAAO7C,GACV1B,KAAMuE,EAAOvE,KACbsF,QAASf,EAAOe,QAChBkB,aAAcjC,EAAOiC,aACrBb,QAASpB,EAAOoB,QAChBD,MAAOnB,EAAOmB,OAGhB7H,EAASuJ,YAAkBD,IAC3B1E,GAAe,GACf3D,QAAQC,IAAIoI,IAwBN1J,KAAMoF,EACNnF,OAAQA,KAIZ,kBAAC,IAAD,CAAO2J,OAAQ,CAAE9F,EAAG,KACnB+F,WAAa,CAACC,eAAe,EAAEC,gBAAgB,GAAGC,kBAAiB,EAAKC,gBAAgB,CAAC,GAAG,GAAG,GAAG,MACnGC,QAAS5F,EAAsBkD,QAASA,EAAS2C,WAAY9F,EAAmB+F,OAAQ,SAAAtD,GAAM,OAAIA,EAAO7C,IAAIoG,UAAQ","file":"static/js/24.437f63a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button, Form, InputNumber, Switch, Upload, message ,Select} from 'antd';\r\nimport { UploadOutlined, InboxOutlined ,LoadingOutlined,PlusOutlined} from '@ant-design/icons';\r\nimport { ecommercegetAll } from '../../../store/Category/ecommerce';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport './notifications.scss'\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { storegetAll } from './../../../store/Category/stores';\r\nimport { productgetAll } from './../../../store/Category/product';\r\nconst NotificationsForm = ({ onFinish, form, idEdit}) => {\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n const {ecommercelist}=useSelector(state=>state.ecommerceReducer)\r\n const {storelist}=useSelector(state=>state.storeReducer)\r\n const {productlist}=useSelector(state=>state.productReducer)\r\n \r\n    const { TextArea } = Input;\r\n    const validateMessages = {\r\n        required: 'Không được để trống !',\r\n        types: {\r\n            string: '${label} không hợp lệ !',\r\n            number: '${label} không hợp lệ !',\r\n\r\n        },\r\n        string: {\r\n            max: '${label} tối đa 255 ký tự !',\r\n        },\r\n        number: {\r\n            range: '${label} trong khoảng 1-100 !',\r\n        },\r\n        pattern: {\r\n            mismatch: '${label} không hợp lệ !',\r\n        },\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n \r\n    useEffect(() => {\r\n        if(idEdit) {\r\n            const imageUrl = form.getFieldValue('image');\r\n            setImageUrl(imageUrl)\r\n            console.log(imageUrl);\r\n        }\r\n        dispatch(ecommercegetAll())\r\n        dispatch(productgetAll())\r\n        dispatch(storegetAll())\r\n    }, [form,idEdit])\r\n\r\n    const handleChange = info => {\r\n        console.log(info.file);\r\n        if (info.file.status === 'uploading') {\r\n            setLoading(true);\r\n          }\r\n    };\r\n    const propsUpload = {\r\n        name: 'file',\r\n        maxCount: 1,\r\n        action: `${process.env.REACT_APP_API_URL}/upload/upload-single`,\r\n    \r\n        onSuccess: (result, file) => {\r\n            console.log('okk', result);\r\n            if(result.success) {\r\n                form.setFieldsValue({\r\n                    image: result.url,\r\n                })\r\n                setImageUrl(result.url);\r\n                message.success('Tải ảnh lên thành công !');\r\n            } else {\r\n                form.setFieldsValue({\r\n                    image: '',\r\n                })\r\n                setImageUrl('');\r\n                if(result.error.message === \"File too large\") {\r\n                    message.error('Dung lượng ảnh không quá 5mb !');\r\n                } if(result.error.message === \"Images Only!\") {\r\n                    message.error('Chỉ tải lên định dạng ảnh .jpg, .png, .jpeg !');\r\n                } else {\r\n                    message.error('Tải ảnh lên thất bại ! Hãy thử lại !');\r\n                }\r\n            }\r\n            setLoading(false);\r\n        },\r\n        onError: (err, response) => {\r\n            form.setFieldsValue({\r\n                image: '',\r\n            })\r\n            setImageUrl('');\r\n            message.error('Tải ảnh lên thất bại ! Hãy thử lại');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const normContent = (value) => {\r\n        return value.text;\r\n    };\r\n    const normFile = (e) => {\r\n        return e && e.file;\r\n    };\r\n    //  method='POST' encType='multipart/form-data'\r\n    return (\r\n        <div>\r\n       \r\n\r\n             <Form className=\"ecommerce-form\"\r\n            \r\n                onFinish={onFinish }\r\n               \r\n                validateMessages={validateMessages}\r\n                form={form} >\r\n                {\r\n                    idEdit &&\r\n                    <Form.Item name=\"id\" hidden={true}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                }\r\n                <Form.Item name=\"name\" label=\"Tên\" required rules={[{ required: true, whitespace: true }, { type: 'string', max: 255 }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <Input placeholder=\"Ví dụ: Eplaza\" />\r\n                </Form.Item>\r\n               \r\n                <Form.Item name=\"content\" label=\"Content\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\" }}>\r\n                    <Input style={{ width: '100%' }} placeholder=\"Ví dụ: 0902174492\" />\r\n                </Form.Item>\r\n              \r\n             \r\n\r\n                <Form.Item name=\"ecommerce_id\" label=\"EcommerceId\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\"  }}>\r\n                    <Select\r\n                       \r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"EcommerceId\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                        }>\r\n                      \r\n\r\n                        {ecommercelist.map((x)=>(\r\n                            <Option key={x} value={x.id} >{x.name}</Option>\r\n                        ))}\r\n                        \r\n                       \r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"store\" label=\"store\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\"  }}>\r\n                    <Select\r\n                       \r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"store\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                        }>\r\n                      \r\n\r\n                        {storelist.map((x)=>(\r\n                            <Option key={x} value={x.id} >{x.name}</Option>\r\n                        ))}\r\n                        \r\n                       \r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"product\" label=\"product\" required rules={[{ required: true }]}\r\n                    style={{ width: '50%', paddingRight: \"10px\"  }}>\r\n                    <Select\r\n                       \r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"product\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                        }>\r\n                      \r\n\r\n                        {productlist.map((x)=>(\r\n                            <Option key={x} value={x.id} >{x.name}</Option>\r\n                        ))}\r\n                        \r\n                       \r\n                    </Select>\r\n                </Form.Item>\r\n             \r\n                    <Form.Item  style={{width:'90%'}}>\r\n                        \r\n                    </Form.Item>\r\n                    <Form.Item name=\"image\" hidden={true}>\r\n                        <Input />\r\n                    </Form.Item>\r\n              \r\n                <Form.Item className='button'>\r\n                    <Button htmlType=\"submit\"\r\n                        type=\"primary\">Lưu lại</Button>\r\n                </Form.Item>\r\n            </Form>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationsForm;\r\n","import React, { useCallback } from 'react'\r\nimport { notificationsAdd, notificationsEdit, notificationsDelete, notificationsgetAll } from '../../../store/Category/notifications';\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Space, Table, Popconfirm, Tag, Input } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { Pagination } from 'antd';\r\nimport { SearchOutlined, SyncOutlined, EditOutlined, DeleteOutlined, PlusOutlined,LoadingOutlined } from '@ant-design/icons';\r\nimport NotificationsForm from './notificationsForm';\r\nimport './notifications.scss'\r\n\r\nconst Notifications = () => {\r\n\r\n  \r\n  const { notificationslist, loadingnotifications } = useSelector(state => state.notificationsReducer)\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(notificationsgetAll())\r\n  }, [dispatch])\r\n  \r\n  const [searchText, setsearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const [idEdit,setIdEdit]=useState(0);\r\n  //modal\r\n  const [isModalAdd, setIsModalAdd] = useState(false);\r\n  const [isModalEdit, setIsModalEdit] = useState(false);\r\n  const [formAdd] = Form.useForm();    \r\n  const [formEdit] = Form.useForm();\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 12 }}>\r\n        <Input\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n\r\n\r\n    render: text =>{\r\n      if( searchedColumn === dataIndex ){\r\n        return     <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[searchText]}\r\n        autoEscape\r\n        textToHighlight={text ? text.toString() : ''}\r\n      />\r\n      }else{\r\n        if(dataIndex==='ecommerce'){\r\n          return text?.name\r\n        }\r\n        if(dataIndex==='store'){\r\n          return text?.name\r\n        }\r\n        if(dataIndex==='product'){\r\n          return text?.name\r\n        }\r\n        return text;\r\n      }\r\n    }\r\n\r\n     \r\n  });\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n\r\n    confirm();\r\n    setsearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n\r\n  };\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setsearchText('')\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: '20%',\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n  \r\n\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'content',\r\n      key: 'content',\r\n      width: '20%',\r\n      sorter: (a, b) => a.content - b.content,\r\n      sortDirections: ['descend', 'ascend'],\r\n      ...getColumnSearchProps('content'),\r\n    },\r\n   \r\n    {\r\n      title: 'EcomerceId',\r\n      dataIndex: 'ecommerce',\r\n      key: 'ecommerce',\r\n      width: '20%',\r\n      ...getColumnSearchProps('ecommerce'),\r\n      sorter: (a, b) => a.ecommerce.length - b.ecommerce.length,\r\n      sortDirections: ['descend', 'ascend'],\r\n    },\r\n    {\r\n      title: 'StoreId',\r\n      dataIndex: 'store',\r\n      key: 'store',\r\n      width: '20%',\r\n      ...getColumnSearchProps('store'),\r\n      sorter: (a, b) => a.store.length - b.store.length,\r\n      sortDirections: ['descend', 'ascend'],\r\n    },\r\n    {\r\n      title: 'ProductId',\r\n      dataIndex: 'product',\r\n      key: 'product',\r\n      width: '20%',\r\n      ...getColumnSearchProps('product'),\r\n      sorter: (a, b) => a.product.length - b.product.length,\r\n      sortDirections: ['descend', 'ascend'],\r\n    },\r\n\r\n    {\r\n      key: 'Action',\r\n      title: <SyncOutlined onClick={() => dispatch(notificationsgetAll())} />,\r\n      align: 'center',\r\n      width: '10%',\r\n      render: (text, record, index) => (\r\n        <Space size=\"middle\">\r\n          <EditOutlined style={{ color: \"blue\" }} onClick={() => handleEditForm(record)} />\r\n          <Popconfirm\r\n            placement=\"bottomRight\"\r\n            title={`Bạn muốn xóa ${record.name} ?`}\r\n            onConfirm={() => handleDelete(record.id)}\r\n            okText=\"Xóa\"\r\n        \r\n            cancelText=\"Hủy\"\r\n          >\r\n            <DeleteOutlined style={{ color: \"red\" }} />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n\r\n    },\r\n  ];\r\n  // actionform\r\n  const onFinishAdd = (data) => {\r\n   const dataNews = {\r\n    name: data.name,\r\n    content: data.content,\r\n    \r\n    product: data.product,\r\n    store: data.store,\r\n    ecommerce_id: data.ecommerce_id,\r\n\r\n   }\r\n    dispatch(notificationsAdd(dataNews))\r\n    formAdd.resetFields()\r\n    setIsModalAdd(false)\r\n\r\n   }\r\n\r\n   const handleEditForm = (record) => {\r\n    const editform = {    \r\n      id: record.id,\r\n  \r\n      name: record.name,\r\n      content: record.content,\r\n      ecommerce_id: record.ecommerce.id,\r\n      store: record.store.id,\r\n      product: record.product.id,\r\n     \r\n    }\r\n  \r\n    setIdEdit(record.id);\r\n    formEdit.setFieldsValue(editform)\r\n    setIsModalEdit(true)\r\n  }\r\n\r\n  const onFinishEdit = (record) => {\r\n    const edit = {\r\n      id:record.id,\r\n      name: record.name,\r\n      content: record.content,  \r\n      ecommerce_id: record.ecommerce_id,   \r\n      product: record.product,\r\n      store: record.store,\r\n     }\r\n    \r\n    dispatch(notificationsEdit(edit))\r\n    setIsModalEdit(false)   ;\r\n    console.log(edit);\r\n  }\r\n  const handleDelete = (id) => {\r\n    dispatch(notificationsDelete(id))\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='addecommerce' >\r\n        <Button type=\"primary\" onClick={() => \r\n         \r\n          setIsModalAdd(true)}>\r\n          Thêm notifications\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Modal className='modal-add' title=\"Thêm notifications\" visible={isModalAdd} footer=\"\" centered onCancel={() => setIsModalAdd(false)}>\r\n        <NotificationsForm\r\n          onFinish={onFinishAdd}\r\n          form={formAdd} />\r\n      </Modal>\r\n\r\n      <Modal className='modal-edit' title=\"Sửa notifications\" visible={isModalEdit} onCancel={() => setIsModalEdit(false)} centered footer=\"\">\r\n        <NotificationsForm\r\n          onFinish={onFinishEdit}\r\n          form={formEdit}      \r\n          idEdit={idEdit}     \r\n        />\r\n      </Modal>\r\n\r\n      <Table scroll={{ x: 900 }}\r\n       pagination= {{defaultCurrent:1,defaultPageSize:10,hideOnSinglePage:true,pageSizeOptions:[10,30,50,100]}}\r\n      loading={loadingnotifications} columns={columns} dataSource={notificationslist} rowKey={record => record.id} bordered />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;\r\n"],"sourceRoot":""}